// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Patient Header tests Should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentPatient={
      Object {
        "abstracted_name": "INTrm5",
        "clinic_name": "I Need Therapy",
        "created_at": "2018-02-20T20:07:54.509Z",
        "id": 5,
        "ot_id": 1,
        "updated_at": "2018-02-20T20:07:54.509Z",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="patient-header-holder"
      >
        <h4>
          PATIENT:
          <span
            className="patient-header-span"
          >
            INTrm5
          </span>
        </h4>
      </div>,
      "className": "PatientHeader",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h4>
          PATIENT:
          <span
            className="patient-header-span"
          >
            INTrm5
          </span>
        </h4>,
        "className": "patient-header-holder",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "PATIENT:",
            <span
              className="patient-header-span"
            >
              INTrm5
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "PATIENT:",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "INTrm5",
              "className": "patient-header-span",
            },
            "ref": null,
            "rendered": "INTrm5",
            "type": "span",
          },
        ],
        "type": "h4",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="patient-header-holder"
        >
          <h4>
            PATIENT:
            <span
              className="patient-header-span"
            >
              INTrm5
            </span>
          </h4>
        </div>,
        "className": "PatientHeader",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h4>
            PATIENT:
            <span
              className="patient-header-span"
            >
              INTrm5
            </span>
          </h4>,
          "className": "patient-header-holder",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "PATIENT:",
              <span
                className="patient-header-span"
              >
                INTrm5
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "PATIENT:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "INTrm5",
                "className": "patient-header-span",
              },
              "ref": null,
              "rendered": "INTrm5",
              "type": "span",
            },
          ],
          "type": "h4",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
